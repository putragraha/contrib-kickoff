// Generated by Dagger (https://dagger.dev).
package com.nsystem.features.reposearch.di;

import com.nsystem.features.reposearch.data.api.RepoApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApiModule_ProvideRepoApiFactory implements Factory<RepoApi> {
  private final ApiModule module;

  private final Provider<Retrofit> retrofitProvider;

  public ApiModule_ProvideRepoApiFactory(ApiModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public RepoApi get() {
    return provideRepoApi(module, retrofitProvider.get());
  }

  public static ApiModule_ProvideRepoApiFactory create(ApiModule module,
      Provider<Retrofit> retrofitProvider) {
    return new ApiModule_ProvideRepoApiFactory(module, retrofitProvider);
  }

  public static RepoApi provideRepoApi(ApiModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideRepoApi(retrofit));
  }
}
