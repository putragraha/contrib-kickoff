// Generated by Dagger (https://dagger.dev).
package com.nsystem.features.reposearch.domain.interactor;

import com.nsystem.features.reposearch.domain.model.Repo;
import com.nsystem.features.reposearch.domain.repository.RepoRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetRepoUseCase_Factory implements Factory<GetRepoUseCase> {
  private final Provider<RepoRepository<Repo>> repoRepositoryProvider;

  public GetRepoUseCase_Factory(Provider<RepoRepository<Repo>> repoRepositoryProvider) {
    this.repoRepositoryProvider = repoRepositoryProvider;
  }

  @Override
  public GetRepoUseCase get() {
    return newInstance(repoRepositoryProvider.get());
  }

  public static GetRepoUseCase_Factory create(
      Provider<RepoRepository<Repo>> repoRepositoryProvider) {
    return new GetRepoUseCase_Factory(repoRepositoryProvider);
  }

  public static GetRepoUseCase newInstance(RepoRepository<Repo> repoRepository) {
    return new GetRepoUseCase(repoRepository);
  }
}
